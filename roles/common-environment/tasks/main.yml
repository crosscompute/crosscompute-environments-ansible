---
- name: include variables
  include_vars: '{{ item }}'
  with_first_found:
    - '{{ ansible_os_family }}.yml'
    - 'RedHat.yml'

- name: get user
  set_fact: target_user={{ lookup('env', 'USER') }}
  when: target_user is undefined and inventory_hostname == 'localhost'
  tags: always

- name: get user
  set_fact: target_user={{ ansible_user }}
  when: target_user is undefined and inventory_hostname != 'localhost'
  tags: always

- name: get user information
  getent: database=passwd key={{ target_user }}
  tags: always

- name: get user folder
  set_fact: home_folder={{ getent_passwd[target_user][4] }}
  tags: always

- name: get virtualenv folder
  set_fact: virtualenv_folder={{ home_folder }}/.virtualenvs/{{ virtualenv_name }}
  tags: always

- name: show virtualenv folder
  debug: var=virtualenv_folder
  tags: always

- name: install system packages
  package: name={{ item }} state=present
  become: true
  with_items:
    - '{{ libselinux_python }}'
    - '{{ python2_virtualenv }}'
    - '{{ python3_virtualenv }}'
    - '{{ python3_devel }}'
    - curl
    - gcc
    - git
    - python3-pandas
    - tmux
    - unzip
    - wget

- import_tasks: vim.yml
  become: true
  when: ansible_os_family == 'RedHat'

- name: install system packages
  package: name={{ item }} state=present
  become: true
  with_items:
    - redhat-rpm-config
  when: ansible_os_family == 'RedHat'

- import_tasks: scripts.yml
  become: true

- import_tasks: swap.yml
  become: true
  when: ansible_memtotal_mb < 2048 and ansible_swaptotal_mb < 1

- name: make virtualenv
  pip:
    name: pip
    state: latest
    virtualenv: '{{ virtualenv_folder }}'
    virtualenv_python: python3
    virtualenv_site_packages: yes
  become: true
  become_user: '{{ target_user }}'

- name: install python packages
  pip: virtualenv={{ virtualenv_folder }}
    name:
      - flake8
      - ipdb
      - ipython
      - jedi
      - pdbpp
      - pudb
      - pytest
      - pytest-mock
  become: true
  become_user: '{{ target_user }}'

- name: install system repositories
  package: name={{ item }} state=present
  become: true
  with_items:
    - https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_version }}.noarch.rpm
    - https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_version }}.noarch.rpm
  changed_when: False
  when: ansible_distribution == 'Fedora'
